/* soapGameAccountBindingProxy.h
   Generated by gSOAP 2.7.13 from Register.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapGameAccountBindingProxy_H
#define soapGameAccountBindingProxy_H
#include "soapH.h"

class SOAP_CMAC GameAccountBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'GameAccountBindingProxy' (change as needed)
	const char *soap_endpoint;
    std::string serverAdd_;
	/// Constructor
	GameAccountBindingProxy();
	/// Constructor with copy of another engine state
	GameAccountBindingProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	GameAccountBindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	GameAccountBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~GameAccountBindingProxy();
	/// Initializer used by constructor
	virtual	void GameAccountBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'QueryAccountAdultStatus' (returns error code or SOAP_OK)
	virtual	int QueryAccountAdultStatus(char *_account, struct ns2__QueryAccountAdultStatusResponse &_param_1);

	/// Web service operation 'QueryAccountBlockHistory' (returns error code or SOAP_OK)
	virtual	int QueryAccountBlockHistory(char *_account, struct ns2__QueryAccountBlockHistoryResponse &_param_2);

	/// Web service operation 'QueryPassword' (returns error code or SOAP_OK)
	virtual	int QueryPassword(char *_account, struct ns2__QueryPasswordResponse &_param_3);

	/// Web service operation 'Register' (returns error code or SOAP_OK)
	virtual	int Register(char *_uinfo, struct ns2__RegisterResponse &_param_4);

	/// Web service operation 'Resume' (returns error code or SOAP_OK)
	virtual	int Resume(char *_account, char *_reason, struct ns2__ResumeResponse &_param_5);

	/// Web service operation 'SetAdult' (returns error code or SOAP_OK)
	virtual	int SetAdult(char *_account, int _adult, struct ns2__SetAdultResponse &_param_6);

	/// Web service operation 'Suspend' (returns error code or SOAP_OK)
	virtual	int Suspend(char *_account, char *_reason, struct ns2__SuspendResponse &_param_7);

	/// Web service operation 'UpdatePassword' (returns error code or SOAP_OK)
	virtual	int UpdatePassword(char *_account, char *_newPassword, struct ns2__UpdatePasswordResponse &_param_8);
};
#endif
