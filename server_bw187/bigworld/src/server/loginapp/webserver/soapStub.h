/* soapStub.h
   Generated by gSOAP 2.7.13 from Register.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__AutoActResultCode
#define SOAP_TYPE_ns1__AutoActResultCode (16)
/* ns1:AutoActResultCode */
enum ns1__AutoActResultCode {ns1__AutoActResultCode__UnknownError = 0, ns1__AutoActResultCode__Succeed = 1, ns1__AutoActResultCode__ParameterIsNull = 2, ns1__AutoActResultCode__UsernameOrPasswordNoSuited = 3, ns1__AutoActResultCode__GameInterfaceError = 4, ns1__AutoActResultCode__GameInterfaceException = 5, ns1__AutoActResultCode__ServerNoActivate = 6};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_ns1__GameAutoActivateResult
#define SOAP_TYPE_ns1__GameAutoActivateResult (7)
/* ns1:GameAutoActivateResult */
class SOAP_CMAC ns1__GameAutoActivateResult
{
public:
	enum ns1__AutoActResultCode ErrorCode;	/* required element of type ns1:AutoActResultCode */
	bool IsPresentee;	/* required element of type xsd:boolean */
	bool IsAdult;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_ns1__GameAutoActivateResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GameAutoActivateResult() : ErrorCode((enum ns1__AutoActResultCode)0), IsPresentee((bool)0), IsAdult((bool)0), soap(NULL) { }
	virtual ~ns1__GameAutoActivateResult() { }
};
#endif

#ifndef SOAP_TYPE__ns1__Register
#define SOAP_TYPE__ns1__Register (8)
/* ns1:Register */
class SOAP_CMAC _ns1__Register
{
public:
	char *serverIP;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
	char *clientIp;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE__ns1__Register */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__Register() : serverIP(NULL), userName(NULL), password(NULL), clientIp(NULL), soap(NULL) { }
	virtual ~_ns1__Register() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RegisterResponse
#define SOAP_TYPE__ns1__RegisterResponse (9)
/* ns1:RegisterResponse */
class SOAP_CMAC _ns1__RegisterResponse
{
public:
	ns1__GameAutoActivateResult *RegisterResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:GameAutoActivateResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE__ns1__RegisterResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RegisterResponse() : RegisterResult(NULL), soap(NULL) { }
	virtual ~_ns1__RegisterResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns2__Exception
#define SOAP_TYPE_ns2__Exception (10)
/* ns2:Exception */
class SOAP_CMAC ns2__Exception
{
public:
	char *message;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns2__Exception */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__Exception() : message(NULL), soap(NULL) { }
	virtual ~ns2__Exception() { }
};
#endif

#ifndef SOAP_TYPE_ns3__ProcessResult
#define SOAP_TYPE_ns3__ProcessResult (11)
/* ns3:ProcessResult */
class SOAP_CMAC ns3__ProcessResult
{
public:
	char *Description;	/* optional element of type xsd:string */
	int ErrorCode;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns3__ProcessResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__ProcessResult() : Description(NULL), ErrorCode(0), soap(NULL) { }
	virtual ~ns3__ProcessResult() { }
};
#endif

#ifndef SOAP_TYPE_ns3__QueryStringResult
#define SOAP_TYPE_ns3__QueryStringResult (12)
/* ns3:QueryStringResult */
class SOAP_CMAC ns3__QueryStringResult
{
public:
	char *Description;	/* optional element of type xsd:string */
	int ErrorCode;	/* required element of type xsd:int */
	char *Value;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns3__QueryStringResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__QueryStringResult() : Description(NULL), ErrorCode(0), Value(NULL), soap(NULL) { }
	virtual ~ns3__QueryStringResult() { }
};
#endif

#ifndef SOAP_TYPE_ns3__QueryAccountBlockHistoryResult
#define SOAP_TYPE_ns3__QueryAccountBlockHistoryResult (13)
/* ns3:QueryAccountBlockHistoryResult */
class SOAP_CMAC ns3__QueryAccountBlockHistoryResult
{
public:
	char *Account;	/* optional element of type xsd:string */
	char *Description;	/* optional element of type xsd:string */
	int ErrorCode;	/* required element of type xsd:int */
	int __sizeRecords;	/* sequence of elements <Records> */
	class ns3__BlockRecord **Records;	/* optional element of type ns3:BlockRecord */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns3__QueryAccountBlockHistoryResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__QueryAccountBlockHistoryResult() : Account(NULL), Description(NULL), ErrorCode(0), __sizeRecords(0), Records(NULL), soap(NULL) { }
	virtual ~ns3__QueryAccountBlockHistoryResult() { }
};
#endif

#ifndef SOAP_TYPE_ns3__BlockRecord
#define SOAP_TYPE_ns3__BlockRecord (14)
/* ns3:BlockRecord */
class SOAP_CMAC ns3__BlockRecord
{
public:
	char *OperationIntermal;	/* optional element of type xsd:string */
	char *OperationReason;	/* optional element of type xsd:string */
	char *OperationTime;	/* optional element of type xsd:string */
	char *OperationType;	/* optional element of type xsd:string */
	char *Operator;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns3__BlockRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__BlockRecord() : OperationIntermal(NULL), OperationReason(NULL), OperationTime(NULL), OperationType(NULL), Operator(NULL), soap(NULL) { }
	virtual ~ns3__BlockRecord() { }
};
#endif

#ifndef SOAP_TYPE_ns3__AdultStatusResult
#define SOAP_TYPE_ns3__AdultStatusResult (15)
/* ns3:AdultStatusResult */
class SOAP_CMAC ns3__AdultStatusResult
{
public:
	bool Adult;	/* required element of type xsd:boolean */
	char *Description;	/* optional element of type xsd:string */
	int ErrorCode;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns3__AdultStatusResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__AdultStatusResult() : Adult((bool)0), Description(NULL), ErrorCode(0), soap(NULL) { }
	virtual ~ns3__AdultStatusResult() { }
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (22)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	ns2__Exception *ns2__Exception_;	/* optional element of type ns2:Exception */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_ns2__QueryAccountAdultStatusResponse
#define SOAP_TYPE_ns2__QueryAccountAdultStatusResponse (26)
/* ns2:QueryAccountAdultStatusResponse */
struct ns2__QueryAccountAdultStatusResponse
{
public:
	ns3__AdultStatusResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:AdultStatusResult */
};
#endif

#ifndef SOAP_TYPE_ns2__QueryAccountAdultStatus
#define SOAP_TYPE_ns2__QueryAccountAdultStatus (30)
/* ns2:QueryAccountAdultStatus */
struct ns2__QueryAccountAdultStatus
{
public:
	char *_account;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__QueryAccountBlockHistoryResponse
#define SOAP_TYPE_ns2__QueryAccountBlockHistoryResponse (31)
/* ns2:QueryAccountBlockHistoryResponse */
struct ns2__QueryAccountBlockHistoryResponse
{
public:
	ns3__QueryAccountBlockHistoryResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:QueryAccountBlockHistoryResult */
};
#endif

#ifndef SOAP_TYPE_ns2__QueryAccountBlockHistory
#define SOAP_TYPE_ns2__QueryAccountBlockHistory (35)
/* ns2:QueryAccountBlockHistory */
struct ns2__QueryAccountBlockHistory
{
public:
	char *_account;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__QueryPasswordResponse
#define SOAP_TYPE_ns2__QueryPasswordResponse (36)
/* ns2:QueryPasswordResponse */
struct ns2__QueryPasswordResponse
{
public:
	ns3__QueryStringResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:QueryStringResult */
};
#endif

#ifndef SOAP_TYPE_ns2__QueryPassword
#define SOAP_TYPE_ns2__QueryPassword (40)
/* ns2:QueryPassword */
struct ns2__QueryPassword
{
public:
	char *_account;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__RegisterResponse
#define SOAP_TYPE_ns2__RegisterResponse (41)
/* ns2:RegisterResponse */
struct ns2__RegisterResponse
{
public:
	ns3__ProcessResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:ProcessResult */
};
#endif

#ifndef SOAP_TYPE_ns2__Register
#define SOAP_TYPE_ns2__Register (45)
/* ns2:Register */
struct ns2__Register
{
public:
	char *_uinfo;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__ResumeResponse
#define SOAP_TYPE_ns2__ResumeResponse (46)
/* ns2:ResumeResponse */
struct ns2__ResumeResponse
{
public:
	ns3__ProcessResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:ProcessResult */
};
#endif

#ifndef SOAP_TYPE_ns2__Resume
#define SOAP_TYPE_ns2__Resume (49)
/* ns2:Resume */
struct ns2__Resume
{
public:
	char *_account;	/* optional element of type xsd:string */
	char *_reason;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__SetAdultResponse
#define SOAP_TYPE_ns2__SetAdultResponse (50)
/* ns2:SetAdultResponse */
struct ns2__SetAdultResponse
{
public:
	ns3__ProcessResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:ProcessResult */
};
#endif

#ifndef SOAP_TYPE_ns2__SetAdult
#define SOAP_TYPE_ns2__SetAdult (53)
/* ns2:SetAdult */
struct ns2__SetAdult
{
public:
	char *_account;	/* optional element of type xsd:string */
	int _adult;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__SuspendResponse
#define SOAP_TYPE_ns2__SuspendResponse (54)
/* ns2:SuspendResponse */
struct ns2__SuspendResponse
{
public:
	ns3__ProcessResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:ProcessResult */
};
#endif

#ifndef SOAP_TYPE_ns2__Suspend
#define SOAP_TYPE_ns2__Suspend (57)
/* ns2:Suspend */
struct ns2__Suspend
{
public:
	char *_account;	/* optional element of type xsd:string */
	char *_reason;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__UpdatePasswordResponse
#define SOAP_TYPE_ns2__UpdatePasswordResponse (58)
/* ns2:UpdatePasswordResponse */
struct ns2__UpdatePasswordResponse
{
public:
	ns3__ProcessResult *_return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:ProcessResult */
};
#endif

#ifndef SOAP_TYPE_ns2__UpdatePassword
#define SOAP_TYPE_ns2__UpdatePassword (61)
/* ns2:UpdatePassword */
struct ns2__UpdatePassword
{
public:
	char *_account;	/* optional element of type xsd:string */
	char *_newPassword;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE___ns4__Register
#define SOAP_TYPE___ns4__Register (65)
/* Operation wrapper: */
struct __ns4__Register
{
public:
	_ns1__Register *ns1__Register;	/* optional element of type ns1:Register */
};
#endif

#ifndef SOAP_TYPE___ns5__Register
#define SOAP_TYPE___ns5__Register (67)
/* Operation wrapper: */
struct __ns5__Register
{
public:
	_ns1__Register *ns1__Register;	/* optional element of type ns1:Register */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (68)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (69)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (71)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (72)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
