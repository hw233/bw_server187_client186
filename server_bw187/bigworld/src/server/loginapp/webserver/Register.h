/* Register.h
   Generated by wsdl2h 1.2.13 from Register accountRegister and typemap.dat
   2009-08-13 17:39:08 GMT
   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.gyyx.cn/"
ns2 = "http://service.cogame.cn/"
ns3 = "htpp://www.cogame.cn"

*/

//gsoap ns1   schema namespace:	http://www.gyyx.cn/
//gsoap ns2   schema namespace:	http://service.cogame.cn/
//gsoap ns3   schema namespace:	htpp://www.cogame.cn
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified
//gsoap ns2   schema form:	unqualified
//gsoap ns3   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__GameAutoActivateResult.
class ns1__GameAutoActivateResult;

//  Forward declaration of class _ns1__Register.
class _ns1__Register;

//  Forward declaration of class _ns1__RegisterResponse.
class _ns1__RegisterResponse;

//  Forward declaration of class ns2__Exception.
class ns2__Exception;

//  Forward declaration of class ns3__ProcessResult.
class ns3__ProcessResult;

//  Forward declaration of class ns3__QueryStringResult.
class ns3__QueryStringResult;

//  Forward declaration of class ns3__QueryAccountBlockHistoryResult.
class ns3__QueryAccountBlockHistoryResult;

//  Forward declaration of class ns3__BlockRecord.
class ns3__BlockRecord;

//  Forward declaration of class ns3__AdultStatusResult.
class ns3__AdultStatusResult;

/// "http://www.gyyx.cn/":AutoActResultCode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__AutoActResultCode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__AutoActResultCode
{
	ns1__AutoActResultCode__UnknownError,	///< xs:string value="UnknownError"
	ns1__AutoActResultCode__Succeed,	///< xs:string value="Succeed"
	ns1__AutoActResultCode__ParameterIsNull,	///< xs:string value="ParameterIsNull"
	ns1__AutoActResultCode__UsernameOrPasswordNoSuited,	///< xs:string value="UsernameOrPasswordNoSuited"
	ns1__AutoActResultCode__GameInterfaceError,	///< xs:string value="GameInterfaceError"
	ns1__AutoActResultCode__GameInterfaceException,	///< xs:string value="GameInterfaceException"
	ns1__AutoActResultCode__ServerNoActivate,	///< xs:string value="ServerNoActivate"
};

/// "http://www.gyyx.cn/":GameAutoActivateResult is a complexType.
class ns1__GameAutoActivateResult
{ public:
/// Element ErrorCode of type "http://www.gyyx.cn/":AutoActResultCode.
    enum ns1__AutoActResultCode          ErrorCode                      1;	///< Required element.
/// Element IsPresentee of type xs:boolean.
    bool                                 IsPresentee                    1;	///< Required element.
/// Element IsAdult of type xs:boolean.
    bool                                 IsAdult                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.gyyx.cn/":Register of complexType.

/// "http://www.gyyx.cn/":Register is a complexType.
class _ns1__Register
{ public:
/// Element serverIP of type xs:string.
    char*                                serverIP                       0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element clientIp of type xs:string.
    char*                                clientIp                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://www.gyyx.cn/":RegisterResponse of complexType.

/// "http://www.gyyx.cn/":RegisterResponse is a complexType.
class _ns1__RegisterResponse
{ public:
/// Element RegisterResult of type "http://www.gyyx.cn/":GameAutoActivateResult.
    ns1__GameAutoActivateResult*         RegisterResult                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://service.cogame.cn/":Exception is a complexType.
class ns2__Exception
{ public:
/// Element message of type xs:string.
    char*                                message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "htpp://www.cogame.cn":ProcessResult is a complexType.
class ns3__ProcessResult
{ public:
/// Element Description of type xs:string.
    char*                                Description                    0;	///< Optional element.
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "htpp://www.cogame.cn":QueryStringResult is a complexType.
class ns3__QueryStringResult
{ public:
/// Element Description of type xs:string.
    char*                                Description                    0;	///< Optional element.
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1;	///< Required element.
/// Element Value of type xs:string.
    char*                                Value                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "htpp://www.cogame.cn":QueryAccountBlockHistoryResult is a complexType.
class ns3__QueryAccountBlockHistoryResult
{ public:
/// Element Account of type xs:string.
    char*                                Account                        0;	///< Optional element.
/// Element Description of type xs:string.
    char*                                Description                    0;	///< Optional element.
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1;	///< Required element.
/// Size of array of ns3__BlockRecord* is 0..unbounded
    int                                  __sizeRecords                 ;
/// Pointer to array of length 0..unbounded
    ns3__BlockRecord*                   *Records                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "htpp://www.cogame.cn":BlockRecord is a complexType.
class ns3__BlockRecord
{ public:
/// Element OperationIntermal of type xs:string.
    char*                                OperationIntermal              0;	///< Optional element.
/// Element OperationReason of type xs:string.
    char*                                OperationReason                0;	///< Optional element.
/// Element OperationTime of type xs:string.
    char*                                OperationTime                  0;	///< Optional element.
/// Element OperationType of type xs:string.
    char*                                OperationType                  0;	///< Optional element.
/// Element Operator of type xs:string.
    char*                                Operator                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "htpp://www.cogame.cn":AdultStatusResult is a complexType.
class ns3__AdultStatusResult
{ public:
/// Element Adult of type xs:boolean.
    bool                                 Adult                          1;	///< Required element.
/// Element Description of type xs:string.
    char*                                Description                    0;	///< Optional element.
/// Element ErrorCode of type xs:int.
    int                                  ErrorCode                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// Element "http://service.cogame.cn/":Exception of type "http://service.cogame.cn/":Exception.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	GameAccountBinding 
//gsoap ns2  service type:	GameAccount 
//gsoap ns2  service port:	http://localhost:8080/GameService/GameAccount 
//gsoap ns2  service namespace:	http://service.cogame.cn/ 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns4  service name:	AutoActivateSoap 
//gsoap ns4  service type:	AutoActivateSoap 
//gsoap ns4  service port:	http://transfer.gyyx.cn:81/CsServiceV2/AutoActivate.asmx 
//gsoap ns4  service namespace:	http://www.gyyx.cn/AutoActivateSoap 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns5  service name:	AutoActivateSoap12 
//gsoap ns5  service type:	AutoActivateSoap 
//gsoap ns5  service port:	http://transfer.gyyx.cn:81/CsServiceV2/AutoActivate.asmx 
//gsoap ns5  service namespace:	http://www.gyyx.cn/AutoActivateSoap12 
//gsoap ns5  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref GameAccountBinding
  - @ref AutoActivateSoap
  - @ref AutoActivateSoap12

*/

/**

@page GameAccountBinding Binding "GameAccountBinding"

@section GameAccountBinding_operations Operations of Binding  "GameAccountBinding"
  - @ref ns2__QueryAccountAdultStatus
  - @ref ns2__QueryAccountBlockHistory
  - @ref ns2__QueryPassword
  - @ref ns2__Register
  - @ref ns2__Resume
  - @ref ns2__SetAdult
  - @ref ns2__Suspend
  - @ref ns2__UpdatePassword

@section GameAccountBinding_ports Endpoints of Binding  "GameAccountBinding"
  - http://localhost:8080/GameService/GameAccount

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page AutoActivateSoap Binding "AutoActivateSoap"

@section AutoActivateSoap_operations Operations of Binding  "AutoActivateSoap"
  - @ref __ns4__Register

@section AutoActivateSoap_ports Endpoints of Binding  "AutoActivateSoap"
  - http://transfer.gyyx.cn:81/CsServiceV2/AutoActivate.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page AutoActivateSoap12 Binding "AutoActivateSoap12"

@section AutoActivateSoap12_operations Operations of Binding  "AutoActivateSoap12"
  - @ref __ns5__Register

@section AutoActivateSoap12_ports Endpoints of Binding  "AutoActivateSoap12"
  - http://transfer.gyyx.cn:81/CsServiceV2/AutoActivate.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
    ns2__Exception*                      ns2__Exception_               ;
///< SOAP Fault element ""http://service.cogame.cn/":Exception" part "Exception"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
    _XML                                 __any                         ;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * GameAccountBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * ns2__QueryAccountAdultStatus                                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__QueryAccountAdultStatusResponse" of service binding "GameAccountBinding" operation "ns2__QueryAccountAdultStatus"
struct ns2__QueryAccountAdultStatusResponse
{
    ns3__AdultStatusResult*             _return_;
};

/// Operation "ns2__QueryAccountAdultStatus" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__QueryAccountAdultStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    // response parameters:
    struct ns2__QueryAccountAdultStatusResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__QueryAccountAdultStatus(
    struct soap *soap,
    // request parameters:
    char*                               account,
    // response parameters:
    struct ns2__QueryAccountAdultStatusResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	QueryAccountAdultStatus rpc
//gsoap ns2  service method-encoding:	QueryAccountAdultStatus literal
//gsoap ns2  service method-action:	QueryAccountAdultStatus ""
int ns2__QueryAccountAdultStatus(
    char*                               _account,	///< Request parameter
    struct ns2__QueryAccountAdultStatusResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__QueryAccountBlockHistory                                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__QueryAccountBlockHistoryResponse" of service binding "GameAccountBinding" operation "ns2__QueryAccountBlockHistory"
struct ns2__QueryAccountBlockHistoryResponse
{
    ns3__QueryAccountBlockHistoryResult* _return_;
};

/// Operation "ns2__QueryAccountBlockHistory" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__QueryAccountBlockHistory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    // response parameters:
    struct ns2__QueryAccountBlockHistoryResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__QueryAccountBlockHistory(
    struct soap *soap,
    // request parameters:
    char*                               account,
    // response parameters:
    struct ns2__QueryAccountBlockHistoryResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	QueryAccountBlockHistory rpc
//gsoap ns2  service method-encoding:	QueryAccountBlockHistory literal
//gsoap ns2  service method-action:	QueryAccountBlockHistory ""
int ns2__QueryAccountBlockHistory(
    char*                               _account,	///< Request parameter
    struct ns2__QueryAccountBlockHistoryResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__QueryPassword                                                         *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__QueryPasswordResponse" of service binding "GameAccountBinding" operation "ns2__QueryPassword"
struct ns2__QueryPasswordResponse
{
    ns3__QueryStringResult*             _return_;
};

/// Operation "ns2__QueryPassword" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__QueryPassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    // response parameters:
    struct ns2__QueryPasswordResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__QueryPassword(
    struct soap *soap,
    // request parameters:
    char*                               account,
    // response parameters:
    struct ns2__QueryPasswordResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	QueryPassword rpc
//gsoap ns2  service method-encoding:	QueryPassword literal
//gsoap ns2  service method-action:	QueryPassword ""
int ns2__QueryPassword(
    char*                               _account,	///< Request parameter
    struct ns2__QueryPasswordResponse  &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__Register                                                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__RegisterResponse" of service binding "GameAccountBinding" operation "ns2__Register"
struct ns2__RegisterResponse
{
    ns3__ProcessResult*                 _return_;
};

/// Operation "ns2__Register" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__Register(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               uinfo,
    // response parameters:
    struct ns2__RegisterResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__Register(
    struct soap *soap,
    // request parameters:
    char*                               uinfo,
    // response parameters:
    struct ns2__RegisterResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	Register rpc
//gsoap ns2  service method-encoding:	Register literal
//gsoap ns2  service method-action:	Register ""
int ns2__Register(
    char*                               _uinfo,	///< Request parameter
    struct ns2__RegisterResponse       &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__Resume                                                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__ResumeResponse" of service binding "GameAccountBinding" operation "ns2__Resume"
struct ns2__ResumeResponse
{
    ns3__ProcessResult*                 _return_;
};

/// Operation "ns2__Resume" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style
  - SOAP Fault: "http://service.cogame.cn/":Exception (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__Resume(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    char*                               reason,
    // response parameters:
    struct ns2__ResumeResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__Resume(
    struct soap *soap,
    // request parameters:
    char*                               account,
    char*                               reason,
    // response parameters:
    struct ns2__ResumeResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	Resume rpc
//gsoap ns2  service method-encoding:	Resume literal
//gsoap ns2  service method-action:	Resume ""
//gsoap ns2  service method-fault:	Resume ns2__Exception_
int ns2__Resume(
    char*                               _account,	///< Request parameter
    char*                               _reason,	///< Request parameter
    struct ns2__ResumeResponse         &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__SetAdult                                                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__SetAdultResponse" of service binding "GameAccountBinding" operation "ns2__SetAdult"
struct ns2__SetAdultResponse
{
    ns3__ProcessResult*                 _return_;
};

/// Operation "ns2__SetAdult" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__SetAdult(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    int                                 adult,
    // response parameters:
    struct ns2__SetAdultResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__SetAdult(
    struct soap *soap,
    // request parameters:
    char*                               account,
    int                                 adult,
    // response parameters:
    struct ns2__SetAdultResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	SetAdult rpc
//gsoap ns2  service method-encoding:	SetAdult literal
//gsoap ns2  service method-action:	SetAdult ""
int ns2__SetAdult(
    char*                               _account,	///< Request parameter
    int                                 _adult,	///< Request parameter
    struct ns2__SetAdultResponse       &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__Suspend                                                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__SuspendResponse" of service binding "GameAccountBinding" operation "ns2__Suspend"
struct ns2__SuspendResponse
{
    ns3__ProcessResult*                 _return_;
};

/// Operation "ns2__Suspend" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__Suspend(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    char*                               reason,
    // response parameters:
    struct ns2__SuspendResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__Suspend(
    struct soap *soap,
    // request parameters:
    char*                               account,
    char*                               reason,
    // response parameters:
    struct ns2__SuspendResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	Suspend rpc
//gsoap ns2  service method-encoding:	Suspend literal
//gsoap ns2  service method-action:	Suspend ""
int ns2__Suspend(
    char*                               _account,	///< Request parameter
    char*                               _reason,	///< Request parameter
    struct ns2__SuspendResponse        &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__UpdatePassword                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__UpdatePasswordResponse" of service binding "GameAccountBinding" operation "ns2__UpdatePassword"
struct ns2__UpdatePasswordResponse
{
    ns3__ProcessResult*                 _return_;
};

/// Operation "ns2__UpdatePassword" of service binding "GameAccountBinding"

/**

Operation details:

  - SOAP RPC literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__UpdatePassword(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               account,
    char*                               newPassword,
    // response parameters:
    struct ns2__UpdatePasswordResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__UpdatePassword(
    struct soap *soap,
    // request parameters:
    char*                               account,
    char*                               newPassword,
    // response parameters:
    struct ns2__UpdatePasswordResponse&
  );
@endcode

C++ proxy class (defined in soapGameAccountBindingProxy.h):
  class GameAccountBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	UpdatePassword rpc
//gsoap ns2  service method-encoding:	UpdatePassword literal
//gsoap ns2  service method-action:	UpdatePassword ""
int ns2__UpdatePassword(
    char*                               _account,	///< Request parameter
    char*                               _newPassword,	///< Request parameter
    struct ns2__UpdatePasswordResponse &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * AutoActivateSoap                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns4__Register                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__Register" of service binding "AutoActivateSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.gyyx.cn/Register"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__Register(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__Register*                     ns1__Register,
    // response parameters:
    _ns1__RegisterResponse*             ns1__RegisterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__Register(
    struct soap *soap,
    // request parameters:
    _ns1__Register*                     ns1__Register,
    // response parameters:
    _ns1__RegisterResponse*             ns1__RegisterResponse
  );
@endcode

C++ proxy class (defined in soapAutoActivateSoapProxy.h):
  class AutoActivateSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	Register document
//gsoap ns4  service method-encoding:	Register literal
//gsoap ns4  service method-action:	Register http://www.gyyx.cn/Register
int __ns4__Register(
    _ns1__Register*                     ns1__Register,	///< Request parameter
    _ns1__RegisterResponse*             ns1__RegisterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * AutoActivateSoap12                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns5__Register                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__Register" of service binding "AutoActivateSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.gyyx.cn/Register"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__Register(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__Register*                     ns1__Register,
    // response parameters:
    _ns1__RegisterResponse*             ns1__RegisterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__Register(
    struct soap *soap,
    // request parameters:
    _ns1__Register*                     ns1__Register,
    // response parameters:
    _ns1__RegisterResponse*             ns1__RegisterResponse
  );
@endcode

C++ proxy class (defined in soapAutoActivateSoap12Proxy.h):
  class AutoActivateSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns5  service method-style:	Register document
//gsoap ns5  service method-encoding:	Register literal
//gsoap ns5  service method-action:	Register http://www.gyyx.cn/Register
int __ns5__Register(
    _ns1__Register*                     ns1__Register,	///< Request parameter
    _ns1__RegisterResponse*             ns1__RegisterResponse	///< Response parameter
);

/* End of Register.h */
